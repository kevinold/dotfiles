[core]
  pager = less -E -F -X
  excludesfile = ~/.gitignore
[color]
	status = auto
	diff = auto
	interactive = auto
[alias]
	ci = commit
	cia = commit --amend
	co = checkout
	st = status
	br = branch
	sb = show-branch
  sp = show -p
  l = log
  lp = log -p  # always show patches
	di = diff
  sl = stash list
  sa = stash apply
  ss = stash save
  mp = push origin master
  mpd = push --dry-run origin master
  rid = rebase master --ignore-date
  unstage = reset HEAD
  staged = diff --cached
  cp = cherry-pick
  rb = rebase
  rbc = rebase --continue
  rbs = rebase --skip
  rl = reflog
  undo = reset --soft HEAD^ #undo previous commit
  bak = !git branch `git br | grep '*' | sed -e 's/* /BAK_/'`  # create backup branch for current branch
  prunelocal = !sh -c 'git branch -d `git branch --merged | grep -v \"^*\\|master\"`'
  todo = grep --heading --break -e 'FIX:*' -e 'TODO:*'

  # from http://gugod.org/2009/01/commonly-used-git-diff-aliases.html
  d1 = diff HEAD^
  d2 = diff HEAD^^
  d3 = diff HEAD^^^
  d4 = diff HEAD^^^^
  d5 = diff HEAD^^^^^
  d10 = diff HEAD^^^^^^^^^^
  publish = !sh -c 'git push origin \"$0\" && git config \"branch.$0.remote\" origin && \
  git config \"branch.$0.merge\" \"refs/heads/$0\"'
  lg = log -n 15 --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
  lga = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative

  lf = log --name-only
  # from https://gist.github.com/1040523#gistcomment-37021
  # prints a great report I can give to clients
  lgp = log --pretty=format:'%aD %s'

  grep = grep -Ii
  gr = grep -Ii
  #grep from root folder
  gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

  #grep on filename
  f = "!git ls-files | grep -i"

  #rename branch tree to done-
  done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"

  #assume aliases
  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  #show assumed files
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  #unassume all the assumed files
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"

  #merges
  ours = "!f() { git co --ours $@ && git add $@; }; f"
  theirs = "!f() { git co --theirs $@ && git add $@; }; f"

  #reset commands
  r = reset
  r1 = reset HEAD^
  r2 = reset HEAD^^
  rh = reset --hard
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard

[user]
	name = Kevin Old
	email = kevin@kevinold.com
[github]
  #user = kevinold
  #token = 014480fe068924f8427822eef4362591
[rerere]
	enabled = 1
