# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

export EDITOR='vim'

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="robbyrussell"

# via http://stackoverflow.com/a/15157360
alias npm-exec='PATH=$(npm bin):$PATH'
#alias lessc='npm-exec lessc'

alias AR='/usr/bin/ar'
alias cls='clear; ls'
alias v='vim'
alias m='more'
#overrides so I learn shorter aliases above
alias vi='echo "use v!!!"'

alias ll='ls -hlahtr'

alias git lg='nocorrect git lg'
alias ge="git status --porcelain | sed 's/^...//' | xargs -o vim"

# remap default gp alias to use dry-run
alias gp='git push --dry-run'
alias gp!='git push'

alias nrl='npm run eslint:all'
alias nt='npm test'
alias ns='npm start'
alias ntw='npm run test:watch'
alias ntwf='npm run test:watch:firefox'

alias yrl='yarn run lint'
alias yt='yarn test'
alias ys='yarn start'
alias ytw='yarn run test:watch'
alias ytwf='yarn run test:watch:firefox'

alias ytwj='yarn test -- --watch'

#alias bdebuild='curl -sH "Accept-encoding: gzip" https://app.dev.wordsearchbible.com/ | gunzip - | ack "(Build: v\d+)" --output="\$1"'
#alias swchrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --user-data-dir=/tmp/swchrome --ignore-certificate-errors --unsafely-treat-insecure-origin-as-secure=https://localhost:8080'

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
#plugins=(git github jira osx mix frontend-search brew zsh-syntax-highlighting react-native yarn)
plugins=(git github jira osx mix frontend-search brew react-native yarn)

source $ZSH/oh-my-zsh.sh
. `brew --prefix`/etc/profile.d/z.sh
function precmd () {
  _z --add "$(pwd -P)"
}

# Speed up git completion
# via http://stackoverflow.com/questions/9810327/git-tab-autocompletion-is-useless-can-i-turn-it-off-or-optimize-it
__git_files () { 
  _wanted files expl 'local files' _files     
}

#oh-my-zsh git plugin overrides
#alias ls='ls --color=auto'

# If you installed the SDK via Homebrew for React Native
export ANDROID_HOME=/usr/local/opt/android-sdk
#export ANDROID_HOME=/usr/local/Cellar/android-sdk

export FIREFOX_BIN=/Applications/Firefox.app/Contents/MacOS/firefox-bin

# Customize to your needs...
export PATH=:~/bin:/usr/local/bin:$PATH:/usr/bin:/bin:/usr/sbin:/sbin:~/bin
export PATH=/usr/local/opt/coreutils/libexec/gnubin:$PATH
export MANPATH=/usr/local/opt/coreutils/libexec/gnuman:$MANPATH


export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home

export PATH=$JAVA_HOME/bin:$PATH

export NVM_DIR="/Users/kevin/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

export PATH="$HOME/.yarn/bin:$PATH"

eval "$(direnv hook zsh)"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Autoload .nvmrc version for nvm
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

export GEM_HOME=$HOME/.gem
export PATH=$GEM_HOME/bin:$PATH
export PATH="$HOME/.fastlane/bin:$PATH"

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
#[[ -f /Users/kold/.nvm/versions/node/v8.1.0/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /Users/kold/.nvm/versions/node/v8.1.0/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
#[[ -f /Users/kold/.nvm/versions/node/v8.1.0/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /Users/kold/.nvm/versions/node/v8.1.0/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh

# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /Users/kold/.nvm/versions/node/v9.11.1/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh ]] && . /Users/kold/.nvm/versions/node/v9.11.1/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# Add Visual Studio Code (code)
export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"